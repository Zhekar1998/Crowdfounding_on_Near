{"id":"../node_modules/cborg/cjs/lib/encode.js","dependencies":[{"name":"/home/yevhhenii/Crowdfounding_on_Near/package.json","includedInParent":true,"mtime":1651056382091},{"name":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/cborg/package.json","includedInParent":true,"mtime":1651056359265},{"name":"./is.js","loc":{"line":5,"column":17},"parent":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/cborg/cjs/lib/encode.js","resolved":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/cborg/cjs/lib/is.js"},{"name":"./token.js","loc":{"line":6,"column":20},"parent":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/cborg/cjs/lib/encode.js","resolved":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/cborg/cjs/lib/token.js"},{"name":"./bl.js","loc":{"line":7,"column":17},"parent":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/cborg/cjs/lib/encode.js","resolved":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/cborg/cjs/lib/bl.js"},{"name":"./common.js","loc":{"line":8,"column":21},"parent":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/cborg/cjs/lib/encode.js","resolved":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/cborg/cjs/lib/common.js"},{"name":"./jump.js","loc":{"line":9,"column":19},"parent":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/cborg/cjs/lib/encode.js","resolved":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/cborg/cjs/lib/jump.js"},{"name":"./byte-utils.js","loc":{"line":10,"column":24},"parent":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/cborg/cjs/lib/encode.js","resolved":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/cborg/cjs/lib/byte-utils.js"},{"name":"./0uint.js","loc":{"line":11,"column":21},"parent":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/cborg/cjs/lib/encode.js","resolved":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/cborg/cjs/lib/0uint.js"},{"name":"./1negint.js","loc":{"line":12,"column":23},"parent":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/cborg/cjs/lib/encode.js","resolved":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/cborg/cjs/lib/1negint.js"},{"name":"./2bytes.js","loc":{"line":13,"column":22},"parent":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/cborg/cjs/lib/encode.js","resolved":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/cborg/cjs/lib/2bytes.js"},{"name":"./3string.js","loc":{"line":14,"column":23},"parent":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/cborg/cjs/lib/encode.js","resolved":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/cborg/cjs/lib/3string.js"},{"name":"./4array.js","loc":{"line":15,"column":22},"parent":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/cborg/cjs/lib/encode.js","resolved":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/cborg/cjs/lib/4array.js"},{"name":"./5map.js","loc":{"line":16,"column":20},"parent":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/cborg/cjs/lib/encode.js","resolved":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/cborg/cjs/lib/5map.js"},{"name":"./6tag.js","loc":{"line":17,"column":20},"parent":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/cborg/cjs/lib/encode.js","resolved":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/cborg/cjs/lib/6tag.js"},{"name":"./7float.js","loc":{"line":18,"column":22},"parent":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/cborg/cjs/lib/encode.js","resolved":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/cborg/cjs/lib/7float.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar is = require('./is.js');\nvar token = require('./token.js');\nvar bl = require('./bl.js');\nvar common = require('./common.js');\nvar jump = require('./jump.js');\nvar byteUtils = require('./byte-utils.js');\nvar _0uint = require('./0uint.js');\nvar _1negint = require('./1negint.js');\nvar _2bytes = require('./2bytes.js');\nvar _3string = require('./3string.js');\nvar _4array = require('./4array.js');\nvar _5map = require('./5map.js');\nvar _6tag = require('./6tag.js');\nvar _7float = require('./7float.js');\n\nconst defaultEncodeOptions = {\n  float64: false,\n  mapSorter,\n  quickEncodeToken: jump.quickEncodeToken\n};\nconst cborEncoders = [];\ncborEncoders[token.Type.uint.major] = _0uint.encodeUint;\ncborEncoders[token.Type.negint.major] = _1negint.encodeNegint;\ncborEncoders[token.Type.bytes.major] = _2bytes.encodeBytes;\ncborEncoders[token.Type.string.major] = _3string.encodeString;\ncborEncoders[token.Type.array.major] = _4array.encodeArray;\ncborEncoders[token.Type.map.major] = _5map.encodeMap;\ncborEncoders[token.Type.tag.major] = _6tag.encodeTag;\ncborEncoders[token.Type.float.major] = _7float.encodeFloat;\nconst buf = new bl.Bl();\nclass Ref {\n  constructor(obj, parent) {\n    this.obj = obj;\n    this.parent = parent;\n  }\n  includes(obj) {\n    let p = this;\n    do {\n      if (p.obj === obj) {\n        return true;\n      }\n    } while (p = p.parent);\n    return false;\n  }\n  static createCheck(stack, obj) {\n    if (stack && stack.includes(obj)) {\n      throw new Error(`${ common.encodeErrPrefix } object contains circular references`);\n    }\n    return new Ref(obj, stack);\n  }\n}\nconst simpleTokens = {\n  null: new token.Token(token.Type.null, null),\n  undefined: new token.Token(token.Type.undefined, undefined),\n  true: new token.Token(token.Type.true, true),\n  false: new token.Token(token.Type.false, false),\n  emptyArray: new token.Token(token.Type.array, 0),\n  emptyMap: new token.Token(token.Type.map, 0)\n};\nconst typeEncoders = {\n  number(obj, _typ, _options, _refStack) {\n    if (!Number.isInteger(obj) || !Number.isSafeInteger(obj)) {\n      return new token.Token(token.Type.float, obj);\n    } else if (obj >= 0) {\n      return new token.Token(token.Type.uint, obj);\n    } else {\n      return new token.Token(token.Type.negint, obj);\n    }\n  },\n  bigint(obj, _typ, _options, _refStack) {\n    if (obj >= BigInt(0)) {\n      return new token.Token(token.Type.uint, obj);\n    } else {\n      return new token.Token(token.Type.negint, obj);\n    }\n  },\n  Uint8Array(obj, _typ, _options, _refStack) {\n    return new token.Token(token.Type.bytes, obj);\n  },\n  string(obj, _typ, _options, _refStack) {\n    return new token.Token(token.Type.string, obj);\n  },\n  boolean(obj, _typ, _options, _refStack) {\n    return obj ? simpleTokens.true : simpleTokens.false;\n  },\n  null(_obj, _typ, _options, _refStack) {\n    return simpleTokens.null;\n  },\n  undefined(_obj, _typ, _options, _refStack) {\n    return simpleTokens.undefined;\n  },\n  ArrayBuffer(obj, _typ, _options, _refStack) {\n    return new token.Token(token.Type.bytes, new Uint8Array(obj));\n  },\n  DataView(obj, _typ, _options, _refStack) {\n    return new token.Token(token.Type.bytes, new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength));\n  },\n  Array(obj, _typ, options, refStack) {\n    if (!obj.length) {\n      if (options.addBreakTokens === true) {\n        return [\n          simpleTokens.emptyArray,\n          new token.Token(token.Type.break)\n        ];\n      }\n      return simpleTokens.emptyArray;\n    }\n    refStack = Ref.createCheck(refStack, obj);\n    const entries = [];\n    let i = 0;\n    for (const e of obj) {\n      entries[i++] = objectToTokens(e, options, refStack);\n    }\n    if (options.addBreakTokens) {\n      return [\n        new token.Token(token.Type.array, obj.length),\n        entries,\n        new token.Token(token.Type.break)\n      ];\n    }\n    return [\n      new token.Token(token.Type.array, obj.length),\n      entries\n    ];\n  },\n  Object(obj, typ, options, refStack) {\n    const isMap = typ !== 'Object';\n    const keys = isMap ? obj.keys() : Object.keys(obj);\n    const length = isMap ? obj.size : keys.length;\n    if (!length) {\n      if (options.addBreakTokens === true) {\n        return [\n          simpleTokens.emptyMap,\n          new token.Token(token.Type.break)\n        ];\n      }\n      return simpleTokens.emptyMap;\n    }\n    refStack = Ref.createCheck(refStack, obj);\n    const entries = [];\n    let i = 0;\n    for (const key of keys) {\n      entries[i++] = [\n        objectToTokens(key, options, refStack),\n        objectToTokens(isMap ? obj.get(key) : obj[key], options, refStack)\n      ];\n    }\n    sortMapEntries(entries, options);\n    if (options.addBreakTokens) {\n      return [\n        new token.Token(token.Type.map, length),\n        entries,\n        new token.Token(token.Type.break)\n      ];\n    }\n    return [\n      new token.Token(token.Type.map, length),\n      entries\n    ];\n  }\n};\ntypeEncoders.Map = typeEncoders.Object;\ntypeEncoders.Buffer = typeEncoders.Uint8Array;\nfor (const typ of 'Uint8Clamped Uint16 Uint32 Int8 Int16 Int32 BigUint64 BigInt64 Float32 Float64'.split(' ')) {\n  typeEncoders[`${ typ }Array`] = typeEncoders.DataView;\n}\nfunction objectToTokens(obj, options = {}, refStack) {\n  const typ = is.is(obj);\n  const customTypeEncoder = options && options.typeEncoders && options.typeEncoders[typ] || typeEncoders[typ];\n  if (typeof customTypeEncoder === 'function') {\n    const tokens = customTypeEncoder(obj, typ, options, refStack);\n    if (tokens != null) {\n      return tokens;\n    }\n  }\n  const typeEncoder = typeEncoders[typ];\n  if (!typeEncoder) {\n    throw new Error(`${ common.encodeErrPrefix } unsupported type: ${ typ }`);\n  }\n  return typeEncoder(obj, typ, options, refStack);\n}\nfunction sortMapEntries(entries, options) {\n  if (options.mapSorter) {\n    entries.sort(options.mapSorter);\n  }\n}\nfunction mapSorter(e1, e2) {\n  const keyToken1 = Array.isArray(e1[0]) ? e1[0][0] : e1[0];\n  const keyToken2 = Array.isArray(e2[0]) ? e2[0][0] : e2[0];\n  if (keyToken1.type !== keyToken2.type) {\n    return keyToken1.type.compare(keyToken2.type);\n  }\n  const major = keyToken1.type.major;\n  const tcmp = cborEncoders[major].compareTokens(keyToken1, keyToken2);\n  if (tcmp === 0) {\n    console.warn('WARNING: complex key types used, CBOR key sorting guarantees are gone');\n  }\n  return tcmp;\n}\nfunction tokensToEncoded(buf, tokens, encoders, options) {\n  if (Array.isArray(tokens)) {\n    for (const token of tokens) {\n      tokensToEncoded(buf, token, encoders, options);\n    }\n  } else {\n    encoders[tokens.type.major](buf, tokens, options);\n  }\n}\nfunction encodeCustom(data, encoders, options) {\n  const tokens = objectToTokens(data, options);\n  if (!Array.isArray(tokens) && options.quickEncodeToken) {\n    const quickBytes = options.quickEncodeToken(tokens);\n    if (quickBytes) {\n      return quickBytes;\n    }\n    const encoder = encoders[tokens.type.major];\n    if (encoder.encodedSize) {\n      const size = encoder.encodedSize(tokens, options);\n      const buf = new bl.Bl(size);\n      encoder(buf, tokens, options);\n      if (buf.chunks.length !== 1) {\n        throw new Error(`Unexpected error: pre-calculated length for ${ tokens } was wrong`);\n      }\n      return byteUtils.asU8A(buf.chunks[0]);\n    }\n  }\n  tokensToEncoded(buf, tokens, encoders, options);\n  return buf.toBytes(true);\n}\nfunction encode(data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options);\n  return encodeCustom(data, cborEncoders, options);\n}\n\nexports.Ref = Ref;\nexports.encode = encode;\nexports.encodeCustom = encodeCustom;\nexports.objectToTokens = objectToTokens;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/cborg/cjs/lib/encode.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}}],"sources":{"../node_modules/cborg/cjs/lib/encode.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar is = require('./is.js');\nvar token = require('./token.js');\nvar bl = require('./bl.js');\nvar common = require('./common.js');\nvar jump = require('./jump.js');\nvar byteUtils = require('./byte-utils.js');\nvar _0uint = require('./0uint.js');\nvar _1negint = require('./1negint.js');\nvar _2bytes = require('./2bytes.js');\nvar _3string = require('./3string.js');\nvar _4array = require('./4array.js');\nvar _5map = require('./5map.js');\nvar _6tag = require('./6tag.js');\nvar _7float = require('./7float.js');\n\nconst defaultEncodeOptions = {\n  float64: false,\n  mapSorter,\n  quickEncodeToken: jump.quickEncodeToken\n};\nconst cborEncoders = [];\ncborEncoders[token.Type.uint.major] = _0uint.encodeUint;\ncborEncoders[token.Type.negint.major] = _1negint.encodeNegint;\ncborEncoders[token.Type.bytes.major] = _2bytes.encodeBytes;\ncborEncoders[token.Type.string.major] = _3string.encodeString;\ncborEncoders[token.Type.array.major] = _4array.encodeArray;\ncborEncoders[token.Type.map.major] = _5map.encodeMap;\ncborEncoders[token.Type.tag.major] = _6tag.encodeTag;\ncborEncoders[token.Type.float.major] = _7float.encodeFloat;\nconst buf = new bl.Bl();\nclass Ref {\n  constructor(obj, parent) {\n    this.obj = obj;\n    this.parent = parent;\n  }\n  includes(obj) {\n    let p = this;\n    do {\n      if (p.obj === obj) {\n        return true;\n      }\n    } while (p = p.parent);\n    return false;\n  }\n  static createCheck(stack, obj) {\n    if (stack && stack.includes(obj)) {\n      throw new Error(`${ common.encodeErrPrefix } object contains circular references`);\n    }\n    return new Ref(obj, stack);\n  }\n}\nconst simpleTokens = {\n  null: new token.Token(token.Type.null, null),\n  undefined: new token.Token(token.Type.undefined, undefined),\n  true: new token.Token(token.Type.true, true),\n  false: new token.Token(token.Type.false, false),\n  emptyArray: new token.Token(token.Type.array, 0),\n  emptyMap: new token.Token(token.Type.map, 0)\n};\nconst typeEncoders = {\n  number(obj, _typ, _options, _refStack) {\n    if (!Number.isInteger(obj) || !Number.isSafeInteger(obj)) {\n      return new token.Token(token.Type.float, obj);\n    } else if (obj >= 0) {\n      return new token.Token(token.Type.uint, obj);\n    } else {\n      return new token.Token(token.Type.negint, obj);\n    }\n  },\n  bigint(obj, _typ, _options, _refStack) {\n    if (obj >= BigInt(0)) {\n      return new token.Token(token.Type.uint, obj);\n    } else {\n      return new token.Token(token.Type.negint, obj);\n    }\n  },\n  Uint8Array(obj, _typ, _options, _refStack) {\n    return new token.Token(token.Type.bytes, obj);\n  },\n  string(obj, _typ, _options, _refStack) {\n    return new token.Token(token.Type.string, obj);\n  },\n  boolean(obj, _typ, _options, _refStack) {\n    return obj ? simpleTokens.true : simpleTokens.false;\n  },\n  null(_obj, _typ, _options, _refStack) {\n    return simpleTokens.null;\n  },\n  undefined(_obj, _typ, _options, _refStack) {\n    return simpleTokens.undefined;\n  },\n  ArrayBuffer(obj, _typ, _options, _refStack) {\n    return new token.Token(token.Type.bytes, new Uint8Array(obj));\n  },\n  DataView(obj, _typ, _options, _refStack) {\n    return new token.Token(token.Type.bytes, new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength));\n  },\n  Array(obj, _typ, options, refStack) {\n    if (!obj.length) {\n      if (options.addBreakTokens === true) {\n        return [\n          simpleTokens.emptyArray,\n          new token.Token(token.Type.break)\n        ];\n      }\n      return simpleTokens.emptyArray;\n    }\n    refStack = Ref.createCheck(refStack, obj);\n    const entries = [];\n    let i = 0;\n    for (const e of obj) {\n      entries[i++] = objectToTokens(e, options, refStack);\n    }\n    if (options.addBreakTokens) {\n      return [\n        new token.Token(token.Type.array, obj.length),\n        entries,\n        new token.Token(token.Type.break)\n      ];\n    }\n    return [\n      new token.Token(token.Type.array, obj.length),\n      entries\n    ];\n  },\n  Object(obj, typ, options, refStack) {\n    const isMap = typ !== 'Object';\n    const keys = isMap ? obj.keys() : Object.keys(obj);\n    const length = isMap ? obj.size : keys.length;\n    if (!length) {\n      if (options.addBreakTokens === true) {\n        return [\n          simpleTokens.emptyMap,\n          new token.Token(token.Type.break)\n        ];\n      }\n      return simpleTokens.emptyMap;\n    }\n    refStack = Ref.createCheck(refStack, obj);\n    const entries = [];\n    let i = 0;\n    for (const key of keys) {\n      entries[i++] = [\n        objectToTokens(key, options, refStack),\n        objectToTokens(isMap ? obj.get(key) : obj[key], options, refStack)\n      ];\n    }\n    sortMapEntries(entries, options);\n    if (options.addBreakTokens) {\n      return [\n        new token.Token(token.Type.map, length),\n        entries,\n        new token.Token(token.Type.break)\n      ];\n    }\n    return [\n      new token.Token(token.Type.map, length),\n      entries\n    ];\n  }\n};\ntypeEncoders.Map = typeEncoders.Object;\ntypeEncoders.Buffer = typeEncoders.Uint8Array;\nfor (const typ of 'Uint8Clamped Uint16 Uint32 Int8 Int16 Int32 BigUint64 BigInt64 Float32 Float64'.split(' ')) {\n  typeEncoders[`${ typ }Array`] = typeEncoders.DataView;\n}\nfunction objectToTokens(obj, options = {}, refStack) {\n  const typ = is.is(obj);\n  const customTypeEncoder = options && options.typeEncoders && options.typeEncoders[typ] || typeEncoders[typ];\n  if (typeof customTypeEncoder === 'function') {\n    const tokens = customTypeEncoder(obj, typ, options, refStack);\n    if (tokens != null) {\n      return tokens;\n    }\n  }\n  const typeEncoder = typeEncoders[typ];\n  if (!typeEncoder) {\n    throw new Error(`${ common.encodeErrPrefix } unsupported type: ${ typ }`);\n  }\n  return typeEncoder(obj, typ, options, refStack);\n}\nfunction sortMapEntries(entries, options) {\n  if (options.mapSorter) {\n    entries.sort(options.mapSorter);\n  }\n}\nfunction mapSorter(e1, e2) {\n  const keyToken1 = Array.isArray(e1[0]) ? e1[0][0] : e1[0];\n  const keyToken2 = Array.isArray(e2[0]) ? e2[0][0] : e2[0];\n  if (keyToken1.type !== keyToken2.type) {\n    return keyToken1.type.compare(keyToken2.type);\n  }\n  const major = keyToken1.type.major;\n  const tcmp = cborEncoders[major].compareTokens(keyToken1, keyToken2);\n  if (tcmp === 0) {\n    console.warn('WARNING: complex key types used, CBOR key sorting guarantees are gone');\n  }\n  return tcmp;\n}\nfunction tokensToEncoded(buf, tokens, encoders, options) {\n  if (Array.isArray(tokens)) {\n    for (const token of tokens) {\n      tokensToEncoded(buf, token, encoders, options);\n    }\n  } else {\n    encoders[tokens.type.major](buf, tokens, options);\n  }\n}\nfunction encodeCustom(data, encoders, options) {\n  const tokens = objectToTokens(data, options);\n  if (!Array.isArray(tokens) && options.quickEncodeToken) {\n    const quickBytes = options.quickEncodeToken(tokens);\n    if (quickBytes) {\n      return quickBytes;\n    }\n    const encoder = encoders[tokens.type.major];\n    if (encoder.encodedSize) {\n      const size = encoder.encodedSize(tokens, options);\n      const buf = new bl.Bl(size);\n      encoder(buf, tokens, options);\n      if (buf.chunks.length !== 1) {\n        throw new Error(`Unexpected error: pre-calculated length for ${ tokens } was wrong`);\n      }\n      return byteUtils.asU8A(buf.chunks[0]);\n    }\n  }\n  tokensToEncoded(buf, tokens, encoders, options);\n  return buf.toBytes(true);\n}\nfunction encode(data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options);\n  return encodeCustom(data, cborEncoders, options);\n}\n\nexports.Ref = Ref;\nexports.encode = encode;\nexports.encodeCustom = encodeCustom;\nexports.objectToTokens = objectToTokens;\n"},"lineCount":243}},"error":null,"hash":"d27861ae7b290afd718378f741b5f188","cacheData":{"env":{}}}