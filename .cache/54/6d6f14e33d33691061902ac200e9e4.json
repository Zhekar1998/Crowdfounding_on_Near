{"id":"../node_modules/@ipld/car/cjs/lib/indexer.js","dependencies":[{"name":"/home/yevhhenii/Crowdfounding_on_Near/package.json","includedInParent":true,"mtime":1651020585488},{"name":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/@ipld/car/package.json","includedInParent":true,"mtime":1651020071406},{"name":"./decoder.js","loc":{"line":5,"column":22},"parent":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/@ipld/car/cjs/lib/indexer.js","resolved":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/@ipld/car/cjs/lib/decoder.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar decoder = require('./decoder.js');\n\nclass CarIndexer {\n  constructor(version, roots, iterator) {\n    this._version = version;\n    this._roots = roots;\n    this._iterator = iterator;\n  }\n  get version() {\n    return this._version;\n  }\n  async getRoots() {\n    return this._roots;\n  }\n  [Symbol.asyncIterator]() {\n    return this._iterator;\n  }\n  static async fromBytes(bytes) {\n    if (!(bytes instanceof Uint8Array)) {\n      throw new TypeError('fromBytes() requires a Uint8Array');\n    }\n    return decodeIndexerComplete(decoder.bytesReader(bytes));\n  }\n  static async fromIterable(asyncIterable) {\n    if (!asyncIterable || !(typeof asyncIterable[Symbol.asyncIterator] === 'function')) {\n      throw new TypeError('fromIterable() requires an async iterable');\n    }\n    return decodeIndexerComplete(decoder.asyncIterableReader(asyncIterable));\n  }\n}\nasync function decodeIndexerComplete(reader) {\n  const decoder$1 = decoder.createDecoder(reader);\n  const {version, roots} = await decoder$1.header();\n  return new CarIndexer(version, roots, decoder$1.blocksIndex());\n}\n\nexports.CarIndexer = CarIndexer;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/indexer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}}],"sources":{"../node_modules/@ipld/car/cjs/lib/indexer.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar decoder = require('./decoder.js');\n\nclass CarIndexer {\n  constructor(version, roots, iterator) {\n    this._version = version;\n    this._roots = roots;\n    this._iterator = iterator;\n  }\n  get version() {\n    return this._version;\n  }\n  async getRoots() {\n    return this._roots;\n  }\n  [Symbol.asyncIterator]() {\n    return this._iterator;\n  }\n  static async fromBytes(bytes) {\n    if (!(bytes instanceof Uint8Array)) {\n      throw new TypeError('fromBytes() requires a Uint8Array');\n    }\n    return decodeIndexerComplete(decoder.bytesReader(bytes));\n  }\n  static async fromIterable(asyncIterable) {\n    if (!asyncIterable || !(typeof asyncIterable[Symbol.asyncIterator] === 'function')) {\n      throw new TypeError('fromIterable() requires an async iterable');\n    }\n    return decodeIndexerComplete(decoder.asyncIterableReader(asyncIterable));\n  }\n}\nasync function decodeIndexerComplete(reader) {\n  const decoder$1 = decoder.createDecoder(reader);\n  const {version, roots} = await decoder$1.header();\n  return new CarIndexer(version, roots, decoder$1.blocksIndex());\n}\n\nexports.CarIndexer = CarIndexer;\n"},"lineCount":42}},"error":null,"hash":"067ef8e5bc2f9b61d87254f6a2bbba56","cacheData":{"env":{}}}