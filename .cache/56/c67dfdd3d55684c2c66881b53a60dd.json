{"id":"../node_modules/@ipld/car/cjs/lib/iterator.js","dependencies":[{"name":"/home/yevhhenii/Crowdfounding_on_Near/package.json","includedInParent":true,"mtime":1651020585488},{"name":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/@ipld/car/package.json","includedInParent":true,"mtime":1651020071406},{"name":"./decoder.js","loc":{"line":5,"column":22},"parent":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/@ipld/car/cjs/lib/iterator.js","resolved":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/@ipld/car/cjs/lib/decoder.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar decoder = require('./decoder.js');\n\nclass CarIteratorBase {\n  constructor(version, roots, iterable) {\n    this._version = version;\n    this._roots = roots;\n    this._iterable = iterable;\n    this._decoded = false;\n  }\n  get version() {\n    return this._version;\n  }\n  async getRoots() {\n    return this._roots;\n  }\n}\nclass CarBlockIterator extends CarIteratorBase {\n  [Symbol.asyncIterator]() {\n    if (this._decoded) {\n      throw new Error('Cannot decode more than once');\n    }\n    if (!this._iterable) {\n      throw new Error('Block iterable not found');\n    }\n    this._decoded = true;\n    return this._iterable[Symbol.asyncIterator]();\n  }\n  static async fromBytes(bytes) {\n    const {version, roots, iterator} = await fromBytes(bytes);\n    return new CarBlockIterator(version, roots, iterator);\n  }\n  static async fromIterable(asyncIterable) {\n    const {version, roots, iterator} = await fromIterable(asyncIterable);\n    return new CarBlockIterator(version, roots, iterator);\n  }\n}\nclass CarCIDIterator extends CarIteratorBase {\n  [Symbol.asyncIterator]() {\n    if (this._decoded) {\n      throw new Error('Cannot decode more than once');\n    }\n    if (!this._iterable) {\n      throw new Error('Block iterable not found');\n    }\n    this._decoded = true;\n    const iterable = this._iterable[Symbol.asyncIterator]();\n    return {\n      async next() {\n        const next = await iterable.next();\n        if (next.done) {\n          return next;\n        }\n        return {\n          done: false,\n          value: next.value.cid\n        };\n      }\n    };\n  }\n  static async fromBytes(bytes) {\n    const {version, roots, iterator} = await fromBytes(bytes);\n    return new CarCIDIterator(version, roots, iterator);\n  }\n  static async fromIterable(asyncIterable) {\n    const {version, roots, iterator} = await fromIterable(asyncIterable);\n    return new CarCIDIterator(version, roots, iterator);\n  }\n}\nasync function fromBytes(bytes) {\n  if (!(bytes instanceof Uint8Array)) {\n    throw new TypeError('fromBytes() requires a Uint8Array');\n  }\n  return decodeIterator(decoder.bytesReader(bytes));\n}\nasync function fromIterable(asyncIterable) {\n  if (!asyncIterable || !(typeof asyncIterable[Symbol.asyncIterator] === 'function')) {\n    throw new TypeError('fromIterable() requires an async iterable');\n  }\n  return decodeIterator(decoder.asyncIterableReader(asyncIterable));\n}\nasync function decodeIterator(reader) {\n  const decoder$1 = decoder.createDecoder(reader);\n  const {version, roots} = await decoder$1.header();\n  return {\n    version,\n    roots,\n    iterator: decoder$1.blocks()\n  };\n}\n\nexports.CarBlockIterator = CarBlockIterator;\nexports.CarCIDIterator = CarCIDIterator;\nexports.CarIteratorBase = CarIteratorBase;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/iterator.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}}],"sources":{"../node_modules/@ipld/car/cjs/lib/iterator.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar decoder = require('./decoder.js');\n\nclass CarIteratorBase {\n  constructor(version, roots, iterable) {\n    this._version = version;\n    this._roots = roots;\n    this._iterable = iterable;\n    this._decoded = false;\n  }\n  get version() {\n    return this._version;\n  }\n  async getRoots() {\n    return this._roots;\n  }\n}\nclass CarBlockIterator extends CarIteratorBase {\n  [Symbol.asyncIterator]() {\n    if (this._decoded) {\n      throw new Error('Cannot decode more than once');\n    }\n    if (!this._iterable) {\n      throw new Error('Block iterable not found');\n    }\n    this._decoded = true;\n    return this._iterable[Symbol.asyncIterator]();\n  }\n  static async fromBytes(bytes) {\n    const {version, roots, iterator} = await fromBytes(bytes);\n    return new CarBlockIterator(version, roots, iterator);\n  }\n  static async fromIterable(asyncIterable) {\n    const {version, roots, iterator} = await fromIterable(asyncIterable);\n    return new CarBlockIterator(version, roots, iterator);\n  }\n}\nclass CarCIDIterator extends CarIteratorBase {\n  [Symbol.asyncIterator]() {\n    if (this._decoded) {\n      throw new Error('Cannot decode more than once');\n    }\n    if (!this._iterable) {\n      throw new Error('Block iterable not found');\n    }\n    this._decoded = true;\n    const iterable = this._iterable[Symbol.asyncIterator]();\n    return {\n      async next() {\n        const next = await iterable.next();\n        if (next.done) {\n          return next;\n        }\n        return {\n          done: false,\n          value: next.value.cid\n        };\n      }\n    };\n  }\n  static async fromBytes(bytes) {\n    const {version, roots, iterator} = await fromBytes(bytes);\n    return new CarCIDIterator(version, roots, iterator);\n  }\n  static async fromIterable(asyncIterable) {\n    const {version, roots, iterator} = await fromIterable(asyncIterable);\n    return new CarCIDIterator(version, roots, iterator);\n  }\n}\nasync function fromBytes(bytes) {\n  if (!(bytes instanceof Uint8Array)) {\n    throw new TypeError('fromBytes() requires a Uint8Array');\n  }\n  return decodeIterator(decoder.bytesReader(bytes));\n}\nasync function fromIterable(asyncIterable) {\n  if (!asyncIterable || !(typeof asyncIterable[Symbol.asyncIterator] === 'function')) {\n    throw new TypeError('fromIterable() requires an async iterable');\n  }\n  return decodeIterator(decoder.asyncIterableReader(asyncIterable));\n}\nasync function decodeIterator(reader) {\n  const decoder$1 = decoder.createDecoder(reader);\n  const {version, roots} = await decoder$1.header();\n  return {\n    version,\n    roots,\n    iterator: decoder$1.blocks()\n  };\n}\n\nexports.CarBlockIterator = CarBlockIterator;\nexports.CarCIDIterator = CarCIDIterator;\nexports.CarIteratorBase = CarIteratorBase;\n"},"lineCount":98}},"error":null,"hash":"85add7c2e04c2b2372f15e9583b604ab","cacheData":{"env":{}}}