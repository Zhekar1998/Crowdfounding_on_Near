{"id":"../node_modules/cborg/cjs/lib/common.js","dependencies":[{"name":"/home/yevhhenii/Crowdfounding_on_Near/package.json","includedInParent":true,"mtime":1651657199683},{"name":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/cborg/package.json","includedInParent":true,"mtime":1651056359265}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst decodeErrPrefix = 'CBOR decode error:';\nconst encodeErrPrefix = 'CBOR encode error:';\nconst uintMinorPrefixBytes = [];\nuintMinorPrefixBytes[23] = 1;\nuintMinorPrefixBytes[24] = 2;\nuintMinorPrefixBytes[25] = 3;\nuintMinorPrefixBytes[26] = 5;\nuintMinorPrefixBytes[27] = 9;\nfunction assertEnoughData(data, pos, need) {\n  if (data.length - pos < need) {\n    throw new Error(`${ decodeErrPrefix } not enough data for type`);\n  }\n}\n\nexports.assertEnoughData = assertEnoughData;\nexports.decodeErrPrefix = decodeErrPrefix;\nexports.encodeErrPrefix = encodeErrPrefix;\nexports.uintMinorPrefixBytes = uintMinorPrefixBytes;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/cborg/cjs/lib/common.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/cborg/cjs/lib/common.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/cborg/cjs/lib/common.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/cborg/cjs/lib/common.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/cborg/cjs/lib/common.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/cborg/cjs/lib/common.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/cborg/cjs/lib/common.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/cborg/cjs/lib/common.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/cborg/cjs/lib/common.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/cborg/cjs/lib/common.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/cborg/cjs/lib/common.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/cborg/cjs/lib/common.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/cborg/cjs/lib/common.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/cborg/cjs/lib/common.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/cborg/cjs/lib/common.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/cborg/cjs/lib/common.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/cborg/cjs/lib/common.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/cborg/cjs/lib/common.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/cborg/cjs/lib/common.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/cborg/cjs/lib/common.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/cborg/cjs/lib/common.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/cborg/cjs/lib/common.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/cborg/cjs/lib/common.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}}],"sources":{"../node_modules/cborg/cjs/lib/common.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst decodeErrPrefix = 'CBOR decode error:';\nconst encodeErrPrefix = 'CBOR encode error:';\nconst uintMinorPrefixBytes = [];\nuintMinorPrefixBytes[23] = 1;\nuintMinorPrefixBytes[24] = 2;\nuintMinorPrefixBytes[25] = 3;\nuintMinorPrefixBytes[26] = 5;\nuintMinorPrefixBytes[27] = 9;\nfunction assertEnoughData(data, pos, need) {\n  if (data.length - pos < need) {\n    throw new Error(`${ decodeErrPrefix } not enough data for type`);\n  }\n}\n\nexports.assertEnoughData = assertEnoughData;\nexports.decodeErrPrefix = decodeErrPrefix;\nexports.encodeErrPrefix = encodeErrPrefix;\nexports.uintMinorPrefixBytes = uintMinorPrefixBytes;\n"},"lineCount":23}},"error":null,"hash":"9620441dcc6ae4a8074e0ae7cb71a6f5","cacheData":{"env":{}}}