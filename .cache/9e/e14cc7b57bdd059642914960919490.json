{"id":"../node_modules/cborg/cjs/lib/decode.js","dependencies":[{"name":"/home/yevhhenii/Crowdfounding_on_Near/package.json","includedInParent":true,"mtime":1651657199683},{"name":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/cborg/package.json","includedInParent":true,"mtime":1651056359265},{"name":"./common.js","loc":{"line":5,"column":21},"parent":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/cborg/cjs/lib/decode.js","resolved":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/cborg/cjs/lib/common.js"},{"name":"./token.js","loc":{"line":6,"column":20},"parent":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/cborg/cjs/lib/decode.js","resolved":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/cborg/cjs/lib/token.js"},{"name":"./jump.js","loc":{"line":7,"column":19},"parent":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/cborg/cjs/lib/decode.js","resolved":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/cborg/cjs/lib/jump.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar common = require('./common.js');\nvar token = require('./token.js');\nvar jump = require('./jump.js');\n\nconst defaultDecodeOptions = {\n  strict: false,\n  allowIndefinite: true,\n  allowUndefined: true,\n  allowBigInt: true\n};\nclass Tokeniser {\n  constructor(data, options = {}) {\n    this.pos = 0;\n    this.data = data;\n    this.options = options;\n  }\n  done() {\n    return this.pos >= this.data.length;\n  }\n  next() {\n    const byt = this.data[this.pos];\n    let token = jump.quick[byt];\n    if (token === undefined) {\n      const decoder = jump.jump[byt];\n      if (!decoder) {\n        throw new Error(`${ common.decodeErrPrefix } no decoder for major type ${ byt >>> 5 } (byte 0x${ byt.toString(16).padStart(2, '0') })`);\n      }\n      const minor = byt & 31;\n      token = decoder(this.data, this.pos, minor, this.options);\n    }\n    this.pos += token.encodedLength;\n    return token;\n  }\n}\nconst DONE = Symbol.for('DONE');\nconst BREAK = Symbol.for('BREAK');\nfunction tokenToArray(token, tokeniser, options) {\n  const arr = [];\n  for (let i = 0; i < token.value; i++) {\n    const value = tokensToObject(tokeniser, options);\n    if (value === BREAK) {\n      if (token.value === Infinity) {\n        break;\n      }\n      throw new Error(`${ common.decodeErrPrefix } got unexpected break to lengthed array`);\n    }\n    if (value === DONE) {\n      throw new Error(`${ common.decodeErrPrefix } found array but not enough entries (got ${ i }, expected ${ token.value })`);\n    }\n    arr[i] = value;\n  }\n  return arr;\n}\nfunction tokenToMap(token, tokeniser, options) {\n  const useMaps = options.useMaps === true;\n  const obj = useMaps ? undefined : {};\n  const m = useMaps ? new Map() : undefined;\n  for (let i = 0; i < token.value; i++) {\n    const key = tokensToObject(tokeniser, options);\n    if (key === BREAK) {\n      if (token.value === Infinity) {\n        break;\n      }\n      throw new Error(`${ common.decodeErrPrefix } got unexpected break to lengthed map`);\n    }\n    if (key === DONE) {\n      throw new Error(`${ common.decodeErrPrefix } found map but not enough entries (got ${ i } [no key], expected ${ token.value })`);\n    }\n    if (useMaps !== true && typeof key !== 'string') {\n      throw new Error(`${ common.decodeErrPrefix } non-string keys not supported (got ${ typeof key })`);\n    }\n    const value = tokensToObject(tokeniser, options);\n    if (value === DONE) {\n      throw new Error(`${ common.decodeErrPrefix } found map but not enough entries (got ${ i } [no value], expected ${ token.value })`);\n    }\n    if (useMaps) {\n      m.set(key, value);\n    } else {\n      obj[key] = value;\n    }\n  }\n  return useMaps ? m : obj;\n}\nfunction tokensToObject(tokeniser, options) {\n  if (tokeniser.done()) {\n    return DONE;\n  }\n  const token$1 = tokeniser.next();\n  if (token$1.type === token.Type.break) {\n    return BREAK;\n  }\n  if (token$1.type.terminal) {\n    return token$1.value;\n  }\n  if (token$1.type === token.Type.array) {\n    return tokenToArray(token$1, tokeniser, options);\n  }\n  if (token$1.type === token.Type.map) {\n    return tokenToMap(token$1, tokeniser, options);\n  }\n  if (token$1.type === token.Type.tag) {\n    if (options.tags && typeof options.tags[token$1.value] === 'function') {\n      const tagged = tokensToObject(tokeniser, options);\n      return options.tags[token$1.value](tagged);\n    }\n    throw new Error(`${ common.decodeErrPrefix } tag not supported (${ token$1.value })`);\n  }\n  throw new Error('unsupported');\n}\nfunction decode(data, options) {\n  if (!(data instanceof Uint8Array)) {\n    throw new Error(`${ common.decodeErrPrefix } data to decode must be a Uint8Array`);\n  }\n  options = Object.assign({}, defaultDecodeOptions, options);\n  const tokeniser = options.tokenizer || new Tokeniser(data, options);\n  const decoded = tokensToObject(tokeniser, options);\n  if (decoded === DONE) {\n    throw new Error(`${ common.decodeErrPrefix } did not find any content to decode`);\n  }\n  if (decoded === BREAK) {\n    throw new Error(`${ common.decodeErrPrefix } got unexpected break`);\n  }\n  if (!tokeniser.done()) {\n    throw new Error(`${ common.decodeErrPrefix } too many terminals, data makes no sense`);\n  }\n  return decoded;\n}\n\nexports.Tokeniser = Tokeniser;\nexports.decode = decode;\nexports.tokensToObject = tokensToObject;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/cborg/cjs/lib/decode.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}}],"sources":{"../node_modules/cborg/cjs/lib/decode.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar common = require('./common.js');\nvar token = require('./token.js');\nvar jump = require('./jump.js');\n\nconst defaultDecodeOptions = {\n  strict: false,\n  allowIndefinite: true,\n  allowUndefined: true,\n  allowBigInt: true\n};\nclass Tokeniser {\n  constructor(data, options = {}) {\n    this.pos = 0;\n    this.data = data;\n    this.options = options;\n  }\n  done() {\n    return this.pos >= this.data.length;\n  }\n  next() {\n    const byt = this.data[this.pos];\n    let token = jump.quick[byt];\n    if (token === undefined) {\n      const decoder = jump.jump[byt];\n      if (!decoder) {\n        throw new Error(`${ common.decodeErrPrefix } no decoder for major type ${ byt >>> 5 } (byte 0x${ byt.toString(16).padStart(2, '0') })`);\n      }\n      const minor = byt & 31;\n      token = decoder(this.data, this.pos, minor, this.options);\n    }\n    this.pos += token.encodedLength;\n    return token;\n  }\n}\nconst DONE = Symbol.for('DONE');\nconst BREAK = Symbol.for('BREAK');\nfunction tokenToArray(token, tokeniser, options) {\n  const arr = [];\n  for (let i = 0; i < token.value; i++) {\n    const value = tokensToObject(tokeniser, options);\n    if (value === BREAK) {\n      if (token.value === Infinity) {\n        break;\n      }\n      throw new Error(`${ common.decodeErrPrefix } got unexpected break to lengthed array`);\n    }\n    if (value === DONE) {\n      throw new Error(`${ common.decodeErrPrefix } found array but not enough entries (got ${ i }, expected ${ token.value })`);\n    }\n    arr[i] = value;\n  }\n  return arr;\n}\nfunction tokenToMap(token, tokeniser, options) {\n  const useMaps = options.useMaps === true;\n  const obj = useMaps ? undefined : {};\n  const m = useMaps ? new Map() : undefined;\n  for (let i = 0; i < token.value; i++) {\n    const key = tokensToObject(tokeniser, options);\n    if (key === BREAK) {\n      if (token.value === Infinity) {\n        break;\n      }\n      throw new Error(`${ common.decodeErrPrefix } got unexpected break to lengthed map`);\n    }\n    if (key === DONE) {\n      throw new Error(`${ common.decodeErrPrefix } found map but not enough entries (got ${ i } [no key], expected ${ token.value })`);\n    }\n    if (useMaps !== true && typeof key !== 'string') {\n      throw new Error(`${ common.decodeErrPrefix } non-string keys not supported (got ${ typeof key })`);\n    }\n    const value = tokensToObject(tokeniser, options);\n    if (value === DONE) {\n      throw new Error(`${ common.decodeErrPrefix } found map but not enough entries (got ${ i } [no value], expected ${ token.value })`);\n    }\n    if (useMaps) {\n      m.set(key, value);\n    } else {\n      obj[key] = value;\n    }\n  }\n  return useMaps ? m : obj;\n}\nfunction tokensToObject(tokeniser, options) {\n  if (tokeniser.done()) {\n    return DONE;\n  }\n  const token$1 = tokeniser.next();\n  if (token$1.type === token.Type.break) {\n    return BREAK;\n  }\n  if (token$1.type.terminal) {\n    return token$1.value;\n  }\n  if (token$1.type === token.Type.array) {\n    return tokenToArray(token$1, tokeniser, options);\n  }\n  if (token$1.type === token.Type.map) {\n    return tokenToMap(token$1, tokeniser, options);\n  }\n  if (token$1.type === token.Type.tag) {\n    if (options.tags && typeof options.tags[token$1.value] === 'function') {\n      const tagged = tokensToObject(tokeniser, options);\n      return options.tags[token$1.value](tagged);\n    }\n    throw new Error(`${ common.decodeErrPrefix } tag not supported (${ token$1.value })`);\n  }\n  throw new Error('unsupported');\n}\nfunction decode(data, options) {\n  if (!(data instanceof Uint8Array)) {\n    throw new Error(`${ common.decodeErrPrefix } data to decode must be a Uint8Array`);\n  }\n  options = Object.assign({}, defaultDecodeOptions, options);\n  const tokeniser = options.tokenizer || new Tokeniser(data, options);\n  const decoded = tokensToObject(tokeniser, options);\n  if (decoded === DONE) {\n    throw new Error(`${ common.decodeErrPrefix } did not find any content to decode`);\n  }\n  if (decoded === BREAK) {\n    throw new Error(`${ common.decodeErrPrefix } got unexpected break`);\n  }\n  if (!tokeniser.done()) {\n    throw new Error(`${ common.decodeErrPrefix } too many terminals, data makes no sense`);\n  }\n  return decoded;\n}\n\nexports.Tokeniser = Tokeniser;\nexports.decode = decode;\nexports.tokensToObject = tokensToObject;\n"},"lineCount":136}},"error":null,"hash":"8eae9a1996dc0f013005e4ad20ad4419","cacheData":{"env":{}}}