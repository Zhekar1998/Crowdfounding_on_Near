{"id":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","dependencies":[{"name":"/home/yevhhenii/Crowdfounding_on_Near/package.json","includedInParent":true,"mtime":1651020585488},{"name":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/@ipld/car/package.json","includedInParent":true,"mtime":1651020071406},{"name":"multiformats/cid","loc":{"line":5,"column":18},"parent":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/@ipld/car/cjs/lib/writer-browser.js","resolved":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/multiformats/cjs/src/cid.js"},{"name":"./encoder.js","loc":{"line":6,"column":22},"parent":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/@ipld/car/cjs/lib/writer-browser.js","resolved":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/@ipld/car/cjs/lib/encoder.js"},{"name":"./iterator-channel.js","loc":{"line":7,"column":30},"parent":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/@ipld/car/cjs/lib/writer-browser.js","resolved":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/@ipld/car/cjs/lib/iterator-channel.js"},{"name":"./decoder.js","loc":{"line":8,"column":22},"parent":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/@ipld/car/cjs/lib/writer-browser.js","resolved":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/@ipld/car/cjs/lib/decoder.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar cid = require('multiformats/cid');\nvar encoder = require('./encoder.js');\nvar iteratorChannel = require('./iterator-channel.js');\nvar decoder = require('./decoder.js');\n\nclass CarWriter {\n  constructor(roots, encoder) {\n    this._encoder = encoder;\n    this._mutex = encoder.setRoots(roots);\n    this._ended = false;\n  }\n  async put(block) {\n    if (!(block.bytes instanceof Uint8Array) || !block.cid) {\n      throw new TypeError('Can only write {cid, bytes} objects');\n    }\n    if (this._ended) {\n      throw new Error('Already closed');\n    }\n    const cid$1 = cid.CID.asCID(block.cid);\n    if (!cid$1) {\n      throw new TypeError('Can only write {cid, bytes} objects');\n    }\n    this._mutex = this._mutex.then(() => this._encoder.writeBlock({\n      cid: cid$1,\n      bytes: block.bytes\n    }));\n    return this._mutex;\n  }\n  async close() {\n    if (this._ended) {\n      throw new Error('Already closed');\n    }\n    await this._mutex;\n    this._ended = true;\n    return this._encoder.close();\n  }\n  static create(roots) {\n    roots = toRoots(roots);\n    const {encoder, iterator} = encodeWriter();\n    const writer = new CarWriter(roots, encoder);\n    const out = new CarWriterOut(iterator);\n    return {\n      writer,\n      out\n    };\n  }\n  static createAppender() {\n    const {encoder, iterator} = encodeWriter();\n    encoder.setRoots = () => Promise.resolve();\n    const writer = new CarWriter([], encoder);\n    const out = new CarWriterOut(iterator);\n    return {\n      writer,\n      out\n    };\n  }\n  static async updateRootsInBytes(bytes, roots) {\n    const reader = decoder.bytesReader(bytes);\n    await decoder.readHeader(reader);\n    const newHeader = encoder.createHeader(roots);\n    if (reader.pos !== newHeader.length) {\n      throw new Error(`updateRoots() can only overwrite a header of the same length (old header is ${ reader.pos } bytes, new header is ${ newHeader.length } bytes)`);\n    }\n    bytes.set(newHeader, 0);\n    return bytes;\n  }\n}\nclass CarWriterOut {\n  constructor(iterator) {\n    this._iterator = iterator;\n  }\n  [Symbol.asyncIterator]() {\n    if (this._iterating) {\n      throw new Error('Multiple iterator not supported');\n    }\n    this._iterating = true;\n    return this._iterator;\n  }\n}\nfunction encodeWriter() {\n  const iw = iteratorChannel.create();\n  const {writer, iterator} = iw;\n  const encoder$1 = encoder.createEncoder(writer);\n  return {\n    encoder: encoder$1,\n    iterator\n  };\n}\nfunction toRoots(roots) {\n  if (roots === undefined) {\n    return [];\n  }\n  if (!Array.isArray(roots)) {\n    const cid$1 = cid.CID.asCID(roots);\n    if (!cid$1) {\n      throw new TypeError('roots must be a single CID or an array of CIDs');\n    }\n    return [cid$1];\n  }\n  const _roots = [];\n  for (const root of roots) {\n    const _root = cid.CID.asCID(root);\n    if (!_root) {\n      throw new TypeError('roots must be a single CID or an array of CIDs');\n    }\n    _roots.push(_root);\n  }\n  return _roots;\n}\nconst __browser = true;\n\nexports.CarWriter = CarWriter;\nexports.CarWriterOut = CarWriterOut;\nexports.__browser = __browser;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/writer-browser.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}}],"sources":{"../node_modules/@ipld/car/cjs/lib/writer-browser.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar cid = require('multiformats/cid');\nvar encoder = require('./encoder.js');\nvar iteratorChannel = require('./iterator-channel.js');\nvar decoder = require('./decoder.js');\n\nclass CarWriter {\n  constructor(roots, encoder) {\n    this._encoder = encoder;\n    this._mutex = encoder.setRoots(roots);\n    this._ended = false;\n  }\n  async put(block) {\n    if (!(block.bytes instanceof Uint8Array) || !block.cid) {\n      throw new TypeError('Can only write {cid, bytes} objects');\n    }\n    if (this._ended) {\n      throw new Error('Already closed');\n    }\n    const cid$1 = cid.CID.asCID(block.cid);\n    if (!cid$1) {\n      throw new TypeError('Can only write {cid, bytes} objects');\n    }\n    this._mutex = this._mutex.then(() => this._encoder.writeBlock({\n      cid: cid$1,\n      bytes: block.bytes\n    }));\n    return this._mutex;\n  }\n  async close() {\n    if (this._ended) {\n      throw new Error('Already closed');\n    }\n    await this._mutex;\n    this._ended = true;\n    return this._encoder.close();\n  }\n  static create(roots) {\n    roots = toRoots(roots);\n    const {encoder, iterator} = encodeWriter();\n    const writer = new CarWriter(roots, encoder);\n    const out = new CarWriterOut(iterator);\n    return {\n      writer,\n      out\n    };\n  }\n  static createAppender() {\n    const {encoder, iterator} = encodeWriter();\n    encoder.setRoots = () => Promise.resolve();\n    const writer = new CarWriter([], encoder);\n    const out = new CarWriterOut(iterator);\n    return {\n      writer,\n      out\n    };\n  }\n  static async updateRootsInBytes(bytes, roots) {\n    const reader = decoder.bytesReader(bytes);\n    await decoder.readHeader(reader);\n    const newHeader = encoder.createHeader(roots);\n    if (reader.pos !== newHeader.length) {\n      throw new Error(`updateRoots() can only overwrite a header of the same length (old header is ${ reader.pos } bytes, new header is ${ newHeader.length } bytes)`);\n    }\n    bytes.set(newHeader, 0);\n    return bytes;\n  }\n}\nclass CarWriterOut {\n  constructor(iterator) {\n    this._iterator = iterator;\n  }\n  [Symbol.asyncIterator]() {\n    if (this._iterating) {\n      throw new Error('Multiple iterator not supported');\n    }\n    this._iterating = true;\n    return this._iterator;\n  }\n}\nfunction encodeWriter() {\n  const iw = iteratorChannel.create();\n  const {writer, iterator} = iw;\n  const encoder$1 = encoder.createEncoder(writer);\n  return {\n    encoder: encoder$1,\n    iterator\n  };\n}\nfunction toRoots(roots) {\n  if (roots === undefined) {\n    return [];\n  }\n  if (!Array.isArray(roots)) {\n    const cid$1 = cid.CID.asCID(roots);\n    if (!cid$1) {\n      throw new TypeError('roots must be a single CID or an array of CIDs');\n    }\n    return [cid$1];\n  }\n  const _roots = [];\n  for (const root of roots) {\n    const _root = cid.CID.asCID(root);\n    if (!_root) {\n      throw new TypeError('roots must be a single CID or an array of CIDs');\n    }\n    _roots.push(_root);\n  }\n  return _roots;\n}\nconst __browser = true;\n\nexports.CarWriter = CarWriter;\nexports.CarWriterOut = CarWriterOut;\nexports.__browser = __browser;\n"},"lineCount":119}},"error":null,"hash":"3e1ff7fe4ea8f97ef0fa1bc18c6bc415","cacheData":{"env":{}}}