{"id":"../node_modules/@ipld/car/cjs/lib/decoder.js","dependencies":[{"name":"/home/yevhhenii/Crowdfounding_on_Near/package.json","includedInParent":true,"mtime":1651020585488},{"name":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/@ipld/car/package.json","includedInParent":true,"mtime":1651020071406},{"name":"varint","loc":{"line":5,"column":21},"parent":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/@ipld/car/cjs/lib/decoder.js","resolved":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/varint/index.js"},{"name":"multiformats/cid","loc":{"line":6,"column":18},"parent":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/@ipld/car/cjs/lib/decoder.js","resolved":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/multiformats/cjs/src/cid.js"},{"name":"multiformats/hashes/digest","loc":{"line":7,"column":21},"parent":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/@ipld/car/cjs/lib/decoder.js","resolved":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/multiformats/cjs/src/hashes/digest.js"},{"name":"@ipld/dag-cbor","loc":{"line":8,"column":22},"parent":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/@ipld/car/cjs/lib/decoder.js","resolved":"/home/yevhhenii/Crowdfounding_on_Near/node_modules/@ipld/car/node_modules/@ipld/dag-cbor/cjs/index.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar varint = require('varint');\nvar cid = require('multiformats/cid');\nvar Digest = require('multiformats/hashes/digest');\nvar dagCbor = require('@ipld/dag-cbor');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar varint__default = /*#__PURE__*/_interopDefaultLegacy(varint);\nvar Digest__namespace = /*#__PURE__*/_interopNamespace(Digest);\n\nconst CIDV0_BYTES = {\n  SHA2_256: 18,\n  LENGTH: 32,\n  DAG_PB: 112\n};\nasync function readVarint(reader) {\n  const bytes = await reader.upTo(8);\n  const i = varint__default[\"default\"].decode(bytes);\n  reader.seek(varint__default[\"default\"].decode.bytes);\n  return i;\n}\nasync function readHeader(reader) {\n  const length = await readVarint(reader);\n  if (length === 0) {\n    throw new Error('Invalid CAR header (zero length)');\n  }\n  const header = await reader.exactly(length);\n  reader.seek(length);\n  const block = dagCbor.decode(header);\n  if (block == null || Array.isArray(block) || typeof block !== 'object') {\n    throw new Error('Invalid CAR header format');\n  }\n  if (block.version !== 1) {\n    if (typeof block.version === 'string') {\n      throw new Error(`Invalid CAR version: \"${ block.version }\"`);\n    }\n    throw new Error(`Invalid CAR version: ${ block.version }`);\n  }\n  if (!Array.isArray(block.roots)) {\n    throw new Error('Invalid CAR header format');\n  }\n  if (Object.keys(block).filter(p => p !== 'roots' && p !== 'version').length) {\n    throw new Error('Invalid CAR header format');\n  }\n  return block;\n}\nasync function readMultihash(reader) {\n  const bytes = await reader.upTo(8);\n  varint__default[\"default\"].decode(bytes);\n  const codeLength = varint__default[\"default\"].decode.bytes;\n  const length = varint__default[\"default\"].decode(bytes.subarray(varint__default[\"default\"].decode.bytes));\n  const lengthLength = varint__default[\"default\"].decode.bytes;\n  const mhLength = codeLength + lengthLength + length;\n  const multihash = await reader.exactly(mhLength);\n  reader.seek(mhLength);\n  return multihash;\n}\nasync function readCid(reader) {\n  const first = await reader.exactly(2);\n  if (first[0] === CIDV0_BYTES.SHA2_256 && first[1] === CIDV0_BYTES.LENGTH) {\n    const bytes = await reader.exactly(34);\n    reader.seek(34);\n    const multihash = Digest__namespace.decode(bytes);\n    return cid.CID.create(0, CIDV0_BYTES.DAG_PB, multihash);\n  }\n  const version = await readVarint(reader);\n  if (version !== 1) {\n    throw new Error(`Unexpected CID version (${ version })`);\n  }\n  const codec = await readVarint(reader);\n  const bytes = await readMultihash(reader);\n  const multihash = Digest__namespace.decode(bytes);\n  return cid.CID.create(version, codec, multihash);\n}\nasync function readBlockHead(reader) {\n  const start = reader.pos;\n  let length = await readVarint(reader);\n  if (length === 0) {\n    throw new Error('Invalid CAR section (zero length)');\n  }\n  length += reader.pos - start;\n  const cid = await readCid(reader);\n  const blockLength = length - (reader.pos - start);\n  return {\n    cid,\n    length,\n    blockLength\n  };\n}\nasync function readBlock(reader) {\n  const {cid, blockLength} = await readBlockHead(reader);\n  const bytes = await reader.exactly(blockLength);\n  reader.seek(blockLength);\n  return {\n    bytes,\n    cid\n  };\n}\nasync function readBlockIndex(reader) {\n  const offset = reader.pos;\n  const {cid, length, blockLength} = await readBlockHead(reader);\n  const index = {\n    cid,\n    length,\n    blockLength,\n    offset,\n    blockOffset: reader.pos\n  };\n  reader.seek(index.blockLength);\n  return index;\n}\nfunction createDecoder(reader) {\n  const headerPromise = readHeader(reader);\n  return {\n    header: () => headerPromise,\n    async *blocks() {\n      await headerPromise;\n      while ((await reader.upTo(8)).length > 0) {\n        yield await readBlock(reader);\n      }\n    },\n    async *blocksIndex() {\n      await headerPromise;\n      while ((await reader.upTo(8)).length > 0) {\n        yield await readBlockIndex(reader);\n      }\n    }\n  };\n}\nfunction bytesReader(bytes) {\n  let pos = 0;\n  return {\n    async upTo(length) {\n      return bytes.subarray(pos, pos + Math.min(length, bytes.length - pos));\n    },\n    async exactly(length) {\n      if (length > bytes.length - pos) {\n        throw new Error('Unexpected end of data');\n      }\n      return bytes.subarray(pos, pos + length);\n    },\n    seek(length) {\n      pos += length;\n    },\n    get pos() {\n      return pos;\n    }\n  };\n}\nfunction chunkReader(readChunk) {\n  let pos = 0;\n  let have = 0;\n  let offset = 0;\n  let currentChunk = new Uint8Array(0);\n  const read = async length => {\n    have = currentChunk.length - offset;\n    const bufa = [currentChunk.subarray(offset)];\n    while (have < length) {\n      const chunk = await readChunk();\n      if (chunk == null) {\n        break;\n      }\n      if (have < 0) {\n        if (chunk.length > have) {\n          bufa.push(chunk.subarray(-have));\n        }\n      } else {\n        bufa.push(chunk);\n      }\n      have += chunk.length;\n    }\n    currentChunk = new Uint8Array(bufa.reduce((p, c) => p + c.length, 0));\n    let off = 0;\n    for (const b of bufa) {\n      currentChunk.set(b, off);\n      off += b.length;\n    }\n    offset = 0;\n  };\n  return {\n    async upTo(length) {\n      if (currentChunk.length - offset < length) {\n        await read(length);\n      }\n      return currentChunk.subarray(offset, offset + Math.min(currentChunk.length - offset, length));\n    },\n    async exactly(length) {\n      if (currentChunk.length - offset < length) {\n        await read(length);\n      }\n      if (currentChunk.length - offset < length) {\n        throw new Error('Unexpected end of data');\n      }\n      return currentChunk.subarray(offset, offset + length);\n    },\n    seek(length) {\n      pos += length;\n      offset += length;\n    },\n    get pos() {\n      return pos;\n    }\n  };\n}\nfunction asyncIterableReader(asyncIterable) {\n  const iterator = asyncIterable[Symbol.asyncIterator]();\n  async function readChunk() {\n    const next = await iterator.next();\n    if (next.done) {\n      return null;\n    }\n    return next.value;\n  }\n  return chunkReader(readChunk);\n}\n\nexports.asyncIterableReader = asyncIterableReader;\nexports.bytesReader = bytesReader;\nexports.chunkReader = chunkReader;\nexports.createDecoder = createDecoder;\nexports.readBlockHead = readBlockHead;\nexports.readHeader = readHeader;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/@ipld/car/cjs/lib/decoder.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}}],"sources":{"../node_modules/@ipld/car/cjs/lib/decoder.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar varint = require('varint');\nvar cid = require('multiformats/cid');\nvar Digest = require('multiformats/hashes/digest');\nvar dagCbor = require('@ipld/dag-cbor');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar varint__default = /*#__PURE__*/_interopDefaultLegacy(varint);\nvar Digest__namespace = /*#__PURE__*/_interopNamespace(Digest);\n\nconst CIDV0_BYTES = {\n  SHA2_256: 18,\n  LENGTH: 32,\n  DAG_PB: 112\n};\nasync function readVarint(reader) {\n  const bytes = await reader.upTo(8);\n  const i = varint__default[\"default\"].decode(bytes);\n  reader.seek(varint__default[\"default\"].decode.bytes);\n  return i;\n}\nasync function readHeader(reader) {\n  const length = await readVarint(reader);\n  if (length === 0) {\n    throw new Error('Invalid CAR header (zero length)');\n  }\n  const header = await reader.exactly(length);\n  reader.seek(length);\n  const block = dagCbor.decode(header);\n  if (block == null || Array.isArray(block) || typeof block !== 'object') {\n    throw new Error('Invalid CAR header format');\n  }\n  if (block.version !== 1) {\n    if (typeof block.version === 'string') {\n      throw new Error(`Invalid CAR version: \"${ block.version }\"`);\n    }\n    throw new Error(`Invalid CAR version: ${ block.version }`);\n  }\n  if (!Array.isArray(block.roots)) {\n    throw new Error('Invalid CAR header format');\n  }\n  if (Object.keys(block).filter(p => p !== 'roots' && p !== 'version').length) {\n    throw new Error('Invalid CAR header format');\n  }\n  return block;\n}\nasync function readMultihash(reader) {\n  const bytes = await reader.upTo(8);\n  varint__default[\"default\"].decode(bytes);\n  const codeLength = varint__default[\"default\"].decode.bytes;\n  const length = varint__default[\"default\"].decode(bytes.subarray(varint__default[\"default\"].decode.bytes));\n  const lengthLength = varint__default[\"default\"].decode.bytes;\n  const mhLength = codeLength + lengthLength + length;\n  const multihash = await reader.exactly(mhLength);\n  reader.seek(mhLength);\n  return multihash;\n}\nasync function readCid(reader) {\n  const first = await reader.exactly(2);\n  if (first[0] === CIDV0_BYTES.SHA2_256 && first[1] === CIDV0_BYTES.LENGTH) {\n    const bytes = await reader.exactly(34);\n    reader.seek(34);\n    const multihash = Digest__namespace.decode(bytes);\n    return cid.CID.create(0, CIDV0_BYTES.DAG_PB, multihash);\n  }\n  const version = await readVarint(reader);\n  if (version !== 1) {\n    throw new Error(`Unexpected CID version (${ version })`);\n  }\n  const codec = await readVarint(reader);\n  const bytes = await readMultihash(reader);\n  const multihash = Digest__namespace.decode(bytes);\n  return cid.CID.create(version, codec, multihash);\n}\nasync function readBlockHead(reader) {\n  const start = reader.pos;\n  let length = await readVarint(reader);\n  if (length === 0) {\n    throw new Error('Invalid CAR section (zero length)');\n  }\n  length += reader.pos - start;\n  const cid = await readCid(reader);\n  const blockLength = length - (reader.pos - start);\n  return {\n    cid,\n    length,\n    blockLength\n  };\n}\nasync function readBlock(reader) {\n  const {cid, blockLength} = await readBlockHead(reader);\n  const bytes = await reader.exactly(blockLength);\n  reader.seek(blockLength);\n  return {\n    bytes,\n    cid\n  };\n}\nasync function readBlockIndex(reader) {\n  const offset = reader.pos;\n  const {cid, length, blockLength} = await readBlockHead(reader);\n  const index = {\n    cid,\n    length,\n    blockLength,\n    offset,\n    blockOffset: reader.pos\n  };\n  reader.seek(index.blockLength);\n  return index;\n}\nfunction createDecoder(reader) {\n  const headerPromise = readHeader(reader);\n  return {\n    header: () => headerPromise,\n    async *blocks() {\n      await headerPromise;\n      while ((await reader.upTo(8)).length > 0) {\n        yield await readBlock(reader);\n      }\n    },\n    async *blocksIndex() {\n      await headerPromise;\n      while ((await reader.upTo(8)).length > 0) {\n        yield await readBlockIndex(reader);\n      }\n    }\n  };\n}\nfunction bytesReader(bytes) {\n  let pos = 0;\n  return {\n    async upTo(length) {\n      return bytes.subarray(pos, pos + Math.min(length, bytes.length - pos));\n    },\n    async exactly(length) {\n      if (length > bytes.length - pos) {\n        throw new Error('Unexpected end of data');\n      }\n      return bytes.subarray(pos, pos + length);\n    },\n    seek(length) {\n      pos += length;\n    },\n    get pos() {\n      return pos;\n    }\n  };\n}\nfunction chunkReader(readChunk) {\n  let pos = 0;\n  let have = 0;\n  let offset = 0;\n  let currentChunk = new Uint8Array(0);\n  const read = async length => {\n    have = currentChunk.length - offset;\n    const bufa = [currentChunk.subarray(offset)];\n    while (have < length) {\n      const chunk = await readChunk();\n      if (chunk == null) {\n        break;\n      }\n      if (have < 0) {\n        if (chunk.length > have) {\n          bufa.push(chunk.subarray(-have));\n        }\n      } else {\n        bufa.push(chunk);\n      }\n      have += chunk.length;\n    }\n    currentChunk = new Uint8Array(bufa.reduce((p, c) => p + c.length, 0));\n    let off = 0;\n    for (const b of bufa) {\n      currentChunk.set(b, off);\n      off += b.length;\n    }\n    offset = 0;\n  };\n  return {\n    async upTo(length) {\n      if (currentChunk.length - offset < length) {\n        await read(length);\n      }\n      return currentChunk.subarray(offset, offset + Math.min(currentChunk.length - offset, length));\n    },\n    async exactly(length) {\n      if (currentChunk.length - offset < length) {\n        await read(length);\n      }\n      if (currentChunk.length - offset < length) {\n        throw new Error('Unexpected end of data');\n      }\n      return currentChunk.subarray(offset, offset + length);\n    },\n    seek(length) {\n      pos += length;\n      offset += length;\n    },\n    get pos() {\n      return pos;\n    }\n  };\n}\nfunction asyncIterableReader(asyncIterable) {\n  const iterator = asyncIterable[Symbol.asyncIterator]();\n  async function readChunk() {\n    const next = await iterator.next();\n    if (next.done) {\n      return null;\n    }\n    return next.value;\n  }\n  return chunkReader(readChunk);\n}\n\nexports.asyncIterableReader = asyncIterableReader;\nexports.bytesReader = bytesReader;\nexports.chunkReader = chunkReader;\nexports.createDecoder = createDecoder;\nexports.readBlockHead = readBlockHead;\nexports.readHeader = readHeader;\n"},"lineCount":245}},"error":null,"hash":"ae8a809972ac7c69ef964ee323d4348c","cacheData":{"env":{}}}