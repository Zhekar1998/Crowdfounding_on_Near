{"version":3,"sources":["../node_modules/regenerator-runtime/runtime.js","js/main_page.js"],"names":["NEAR_exchange_data","error","console","NEAR_exchange","Data","log","document","getElementById","onclick","window","walletAccount","isSignedIn","style","display","loadJSON","path","success","xhr","XMLHttpRequest","onreadystatechange","readyState","status","JSON","parse","responseText","open","send","requestSignIn","nearConfig","contractName","img_number","createElement","input_place","template","clone","content","cloneNode","appendChild","onchange","div_list","getElementsByName","div_bonus_remove","length","parentNode","removeChild","bonus_number","innerText","onkeyup","value","near","usd","near_to_dollar","i","dollar_to_near","getElementsByClassName"],"mappings":"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ID,EAAAA,gBAAgB,CAACE,UAAjB,CAA4BC,WAA5B,CAAwCH,gBAAxC;ADAJ,ACCII,EAAAA,YAAY,GAAGA,YAAY,GAAG,CAA9B;ADAJ;AACA,ACAI,MAAIA,YAAY,KAAK,CAArB,EAAwB;ADC5B,ACAQvC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,EAA6CK,KAA7C,CAAmDC,OAAnD,GAA6D,MAA7D;ADCR,ACAK;ADCL,ACAC,CATD;ADUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main_page.e1502dd6.js","sourceRoot":"../src","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","//import \"./near-work\"\nimport \"regenerator-runtime/runtime\"\n\n\nvar NEAR_exchange_data;\n\nfunction error() {\n    console.error(\"data not find\");\n}\n\nfunction NEAR_exchange(Data) {\n\n    // Output only the details on the first post\n    console.log(Data);\n    NEAR_exchange_data = Data;\n    // output the details of first three posts\n\n    // output the id field of first five elements.\n\n}\n\n\n\ndocument.getElementById(\"create_project_modal\").onclick = function() {\n    if (window.walletAccount.isSignedIn()) {\n        document.getElementById(\"create_pro\").style.display = \"block\";\n        loadJSON(\"https://helper.testnet.near.org/fiat\", NEAR_exchange, error);\n\n    } else {\n        document.getElementById(\"modalSignIn\").style.display = \"block\";\n    }\n}\n\nfunction loadJSON(path, success, error) {\n    var xhr = new XMLHttpRequest();\n    xhr.onreadystatechange = function() {\n        if (xhr.readyState === 4) {\n            if (xhr.status === 200) {\n                success(JSON.parse(xhr.responseText));\n            } else {\n                error(xhr);\n            }\n        }\n    };\n    xhr.open('GET', path, true);\n    xhr.send();\n}\n\ndocument.getElementById(\"sign_in_btn_modal\").onclick = async() => {\n\n    await window.walletAccount.requestSignIn(window.nearConfig.contractName);\n    if (window.walletAccount.isSignedIn()) {\n        document.getElementById(\"modalSignin\").style.display = \"none\";\n        document.getElementById(\"create_pro\").style.display = \"block\";\n        loadJSON(\"https://helper.mainnet.near.org/fiat\", NEAR_exchange, error);\n    }\n}\ndocument.getElementById(\"btn-close-pro-create\").onclick = function() {\n    document.getElementById(\"create_pro\").style.display = \"none\";\n}\ndocument.getElementById(\"btn-close_singin\").onclick = function() {\n    document.getElementById(\"modalSignIn\").style.display = \"none\";\n}\n\ndocument.getElementById(\"btn-close_donateBox\").onclick = function() {\n    document.getElementById(\"donateBox\").style.display = \"none\";\n}\ndocument.getElementById(\"btn-close_createpage\").onclick = function() {\n    document.getElementById(\"create_page\").style.display = \"none\";\n}\n\nvar img_number = 1;\ndocument.getElementById(\"add_img_btn\").onclick = function() {\n    if ('content' in document.createElement('template')) {\n        img_number = img_number + 1;\n        // Находим элемент tbody таблицы\n        // и шаблон строки\n        let input_place = document.getElementById(\"img_add\");\n        let template = document.getElementById(\"img_form\");\n\n\n        let clone = template.content.cloneNode(true);\n\n        document.getElementById(\"remove_img_btn\").style.display = \"block\";\n        input_place.appendChild(clone);\n\n\n\n\n    }\n}\n\ndocument.getElementById(\"floatingShortInfo\").onchange = function() {\n\n}\n\n\n\ndocument.getElementById(\"remove_img_btn\").onclick = function() {\n    let div_list = document.getElementsByName(\"image\");\n\n    let div_bonus_remove = div_list[div_list.length - 1];\n    div_bonus_remove.parentNode.removeChild(div_bonus_remove);\n    img_number = img_number - 1;\n    if (img_number === 1) {\n        document.getElementById(\"remove_img_btn\").style.display = \"none\";\n    }\n}\n\nvar bonus_number = 0;\ndocument.getElementById(\"add_nft_button\").onclick = function() {\n    if ('content' in document.createElement('template')) {\n        bonus_number = bonus_number + 1;\n        // Находим элемент tbody таблицы\n        // и шаблон строки\n        var input_place = document.getElementById(\"NFT_create_place\");\n        var template = document.getElementById(\"create_nft_template\");\n\n\n        var clone = template.content.cloneNode(true);\n        clone.getElementById(\"nft_number\").innerText = \"Bonus \" + bonus_number;\n        document.getElementById(\"remove-nft_button\").style.display = \"block\";\n        input_place.appendChild(clone);\n\n\n\n\n    }\n}\n\ndocument.getElementById(\"Near_amount\").onkeyup = function() {\n    document.getElementById(\"dolar_amount\").value = document.getElementById(\"Near_amount\").value * NEAR_exchange_data.near.usd;\n}\n\ndocument.getElementById(\"dolar_amount\").onkeyup = function() {\n    document.getElementById(\"Near_amount\").value = document.getElementById(\"dolar_amount\").value / NEAR_exchange_data.near.usd;\n}\n\n/*window.document.onload = function () {\n    let i =0;\n    document.getElementsByName(\"dolar_NFT_price\").forEach((el)=>{\n        el.onkeyup = function () {\n            document.getElementsByName(\"nft_price_create\")[i].value = el.value/NEAR_exchange_data.near.usd;\n        }\n        i++;\n    })\n    i=0\n    document.getElementsByName(\"nft_price_create\").forEach((el)=>{\n        el.onkeyup = function () {\n            document.getElementsByName(\"dolar_NFT_price\")[i].value = el.value*NEAR_exchange_data.near.usd;\n        }\n        i++;\n    })\n}*/\n\nfunction near_to_dollar() {\n    for (let i = 0; i < document.getElementsByName(\"dolar_NFT_price\").length; i++) {\n        document.getElementsByName(\"dolar_NFT_price\")[i].value = document.getElementsByName(\"nft_price_create\")[i].value * NEAR_exchange_data.near.usd;\n    }\n}\n\nfunction dollar_to_near() {\n    for (let i = 0; i < document.getElementsByName(\"dolar_NFT_price\").length; i++) {\n        document.getElementsByName(\"nft_price_create\")[i].value = document.getElementsByName(\"dolar_NFT_price\")[i].value / NEAR_exchange_data.near.usd;\n    }\n}\ndocument.getElementById(\"remove-nft_button\").onclick = function() {\n    var div_list = document.getElementsByClassName(\"div_create_nft\");\n\n    var div_bonus_remove = div_list[div_list.length - 1];\n    div_bonus_remove.parentNode.removeChild(div_bonus_remove);\n    bonus_number = bonus_number - 1;\n    if (bonus_number === 0) {\n        document.getElementById(\"remove-nft_button\").style.display = \"none\";\n    }\n}"]}